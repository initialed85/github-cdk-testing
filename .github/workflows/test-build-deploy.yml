name: test-build-deploy

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

env:
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0
  ENVIRONMENT: dev

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Handle staging environment
        if: startsWith(github.ref, 'refs/heads/master')
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
      - name: Handle prod environment
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          echo "REALLY_DEPLOY_TO_PROD=yes_really_deploy_to_prod" >> $GITHUB_ENV
      - name: Handle Git environment
        run: |
          GIT_DESCRIBE=$(git describe --all --long --always --dirty --broken)
          echo "GIT_DESCRIBE=${GIT_DESCRIBE}" >> $GITHUB_ENV
          GIT_COMMIT_HASH=$(git rev-parse --verify HEAD)
          echo "GIT_COMMIT_HASH=${GIT_COMMIT_HASH}" >> $GITHUB_ENV

  test-backend:
    needs:
      - setup
    env:
      _LAMBDA_SERVER_PORT: 8080
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache-dependency-path: backend/go.sum
      - name: Run tests
        run: |
          cd ./backend
          go mod download
          go test -v ./...

  test-frontend:
    needs:
      - setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16
          cache-dependency-path: frontend/package-lock.json
          cache: "npm"
      - name: Run tests
        run: |
          cd ./frontend
          npm ci
          npm run test

  test-infrastructure:
    needs:
      - setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16
          cache-dependency-path: cdk/package-lock.json
          cache: "npm"
      - name: Run tests
        run: |
          cd ./cdk
          npm ci
          npm run test

  build-backend:
    needs:
      - test-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache-dependency-path: backend/go.sum
      - name: Run build
        run: |
          cd ./backend
          go mod download
          go build -x -o bin/root_handler cmd/root_handler/main.go
      - uses: actions/upload-artifact@v3
        with:
          name: backend-bin
          path: ./backend/bin

  build-frontend:
    needs:
      - test-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16
          cache-dependency-path: frontend/package-lock.json
          cache: "npm"
      - name: Run build
        run: |
          cd ./frontend
          npm ci
          npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ./frontend/build

  build-infrastructure:
    needs:
      - test-infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16
          cache-dependency-path: cdk/package-lock.json
          cache: "npm"
      - name: Run build
        run: |
          cd ./cdk
          npm ci
          npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: cdk-bin
          path: ./cdk/bin
      - uses: actions/upload-artifact@v3
        with:
          name: cdk-lib
          path: ./cdk/lib

  deploy-infrastructure:
    needs:
      - build-backend
      - build-frontend
      - build-infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16
          cache-dependency-path: cdk/package-lock.json
          cache: "npm"
      - uses: actions/download-artifact@v3
        with:
          name: backend-bin
          path: ./backend/bin
      - uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: ./frontend/build
      - uses: actions/download-artifact@v3
        with:
          name: cdk-bin
          path: ./cdk/bin
      - uses: actions/download-artifact@v3
        with:
          name: cdk-lib
          path: ./cdk/lib
      - name: Deploy infrastructure
        env:
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          REALLY_DEPLOY_TO_PROD: ${{ env.REALLY_DEPLOY_TO_PROD }}
        run: |
          cd ./cdk
          npm ci
          npm install -g aws-cdk@2.78.0
          cdk deploy --require-approval=never
